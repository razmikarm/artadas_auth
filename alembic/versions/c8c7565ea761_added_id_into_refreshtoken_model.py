"""Added ID into RefreshToken model

Revision ID: c8c7565ea761
Revises: a6e29a7e536d
Create Date: 2025-01-08 16:28:58.744473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

from uuid import uuid4

# revision identifiers, used by Alembic.
revision: str = 'c8c7565ea761'
down_revision: Union[str, None] = 'a6e29a7e536d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('refreshtoken', sa.Column('id', sa.Uuid(), nullable=False))

    # # ------> Start of custom code
    # # Manually setting values for new column `id`
    # # Step 1: Change `nullable` into `True` in above code
    # # Step 2: Generate UUIDs for existing rows
    # connection = op.get_bind()
    # result = connection.execute(sa.text("SELECT token_hash FROM refreshtoken"))
    # for row in result:
    #     connection.execute(
    #         sa.text("UPDATE refreshtoken SET id = :id WHERE token_hash = :token_hash"),
    #         {"id": str(uuid4()), "token_hash": row.token_hash}
    #     )
    # # Step 3: Alter the column to be non-nullable
    # op.alter_column('refreshtoken', 'id', nullable=False)
    # # ------> End of custom code


    op.create_index(op.f('ix_refreshtoken_id'), 'refreshtoken', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_refreshtoken_id'), table_name='refreshtoken')
    op.drop_column('refreshtoken', 'id')
    # ### end Alembic commands ###
